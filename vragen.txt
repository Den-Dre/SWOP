- TableCell: bijhouden of verwijderen voor information model?
- Minuut 51 in collaborate video: Hoe zijn UI Layer en domain model verbonden?
- Hoe weten we waarop geklikt wordt? Via de tabel zijn rijen en kolommen hun coördinaten 
- Klikken op address bar: Browser detecteert of dit op address bar of document area is, als dit op address bar is, dan laten afhandelen door address bar (knoppen doorsturen, ...). Is dit een correcte manier van werken?
- Overerving is hoge koppeling, moet overerving altijd dan vermeden worden? Dit staat precies in tegenstelling met Composite paragraaf uit design patterns document
- Preciezere formulering van bv. ArrayList<TableCell> cells? Of volstaat attribuut naam in diagram?
- Moeten we UserInterface.AddressBar en UserInterface.DocumentArea laten overerven van de Listener-interfaces of moeten deze Litstener-interfaces rechtsreeks geïmplementeerd worden?
- Gegeven URLComposer geeft een URLObject terug. Wij zouden een eigen URL Class maken. Zou het een redelijk idee zijn om deze Class te extenden en onze listener toe te voegen?
- Is het een redelijk idee om een frame toe te voegen aan ons GUI framework dat algemene eigenschappen bevat voor UserInterface.AddressBar en UserInterface.DocumentArea, zoals hasFocus()?
- Hoe moeten we ons GUI Framework weergeven in ons design-model / linken aan het domein model. Moet dit in een apart model?

--- Na eerste feedback ---
- Composite pattern: is het (verplicht) om voor elke (leaf) node een association te hebben naar het composite object. 
- Is contentspan al geen toepassing van het composite design principe? 
- Mogen we contentSpan abstract maken om de coördinaten te toe te voegen?
    -> Neen, coördinaten niet in domein laag
- Beter om listener aan contentSpan toe te voegen of aan aparte PageElement klasse te koppelen?

- Moet er een link zijn tussen UI en Domain klasse om de centrale klasse van de domeinlaag te initialiseren?
- Structuur van documentCell zou die van contentSpan moeten weergeven in ons huidig design. Is dit bad practice?
